[{"/home/howardjake/Documents/GA/react/react-mastermind-projects/react-weather/src/App.js":"1","/home/howardjake/Documents/GA/react/react-mastermind-projects/react-weather/src/components/Map/map-style.js":"2"},{"size":689,"mtime":1617394462026,"results":"3","hashOfConfig":"4"},{"size":4715,"mtime":1606536831000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1okp0wb",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/howardjake/Documents/GA/react/react-mastermind-projects/react-weather/src/App.js",["11"],"import { useEffect, useState } from 'react';\n\nimport { getCurrentLatLng } from './services/geolocation';\n\nimport './App.css';\nimport Map from './components/Map/Map';\n\nfunction App () {\n\n  const [appData, setAppData] = useState({\n    lat: null,\n    lng: null,\n  })\n\n  const getAppData = async () => {\n    // browser location \n    const {lat, lng} = await getCurrentLatLng();\n    // weather data\n    // set component state to that data\n    setAppData({lat, lng});\n  }\n\n  useEffect(() => {\n    getAppData();\n  }, [])\n\n  return (\n    <div className='App'>\n      <Map lat={appData.lat} lng={}/>\n      <header className='App-header'>REACT WEATHER</header>\n    </div>\n  );\n}\n\nexport default App;\n","/home/howardjake/Documents/GA/react/react-mastermind-projects/react-weather/src/components/Map/map-style.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"12","line":29,"column":34},"Parsing error: JSX attributes must only be assigned a non-empty expression\n\n  27 |   return (\n  28 |     <div className='App'>\n> 29 |       <Map lat={appData.lat} lng={}/>\n     |                                  ^\n  30 |       <header className='App-header'>REACT WEATHER</header>\n  31 |     </div>\n  32 |   );"]